#
# Ingress definitions
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: m-auth-rules
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /auth(/|$)(me)
            pathType: Prefix
            backend:
              service: 
                name: mimicchio-auth-service
                port:
                  name: ms2-port
---
#
# Ingress Base definitions
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mimicchio-rules
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/auth-url: "http://$host/auth/me"
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
spec:
  rules:
    - http:
        paths:
          - path: /ms1(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: mimicchio1-service
                port:
                  name: ms1-port
          - path: /auth(/|$)(.*)
            pathType: Prefix
            backend:
              service: 
                name: mimicchio-auth-service
                port:
                  name: ms2-port

#
# Deployments Definitions Mimicchio 1
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimicchio1-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimicchio1
  template:
    metadata:
      labels:
        app: mimicchio1
    spec:
      containers:
      - name: k8s-mimicchio1
        image: mts88/mimicchio-1:1.0.2
        ports:
          - name: mimicchio1-port
            containerPort: 3000
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
#
# Service definition (exposing)
#
apiVersion: v1
kind: Service
metadata: 
  name: mimicchio1-service
spec:
  ports:
    - name: ms1-port
      port: 3000
      targetPort: mimicchio1-port
      protocol: TCP
  selector:
    app: mimicchio1
  type: ClusterIP
#
# Mimicchio 1 Service autoscaler
#
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mimicchio1-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mimicchio1
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
#
# Deployments Definitions Sample2
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimicchio-auth-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimicchio-auth
  template:
    metadata:
      labels:
        app: mimicchio-auth
    spec:
      containers:
      - name: k8s-mimicchio-auth
        image: mts88/mimicchio-auth:1.0.7
        ports:
          - name: m-auth-port
            containerPort: 3001
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
#
# Service definition Sample2 (exposing)
#
apiVersion: v1
kind: Service
metadata: 
    name: mimicchio-auth-service
spec:
    ports:
        - name: ms2-port
          port: 3001
          targetPort: m-auth-port
          protocol: TCP
    selector:
        app: mimicchio-auth
    type: ClusterIP
#
# Mimicchio Auth Service autoscaler
#
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mimicchio-auth-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mimicchio-auth
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70